/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CarOwnerRole;

import Business.Car.Car;
import Business.CarOwner.CarOwner;
import Business.Enterprise.Enterprise;
import Business.Organization.CarOwnerOrganization;
import Business.Traveller.Traveller;
import Business.UserAccount.UserAccount;
import FieldLevelValidation.FieldLevelValidation;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Piyush
 */
public class CarDetailsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CarDetailsJPanel
     */
    
    private JPanel userProcessContainer;
    private CarOwnerOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    public CarDetailsJPanel(JPanel userProcessContainer, UserAccount account, CarOwnerOrganization organization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        
        carOwnerNameTextField.setText(userAccount.getTraveller().getName());
        populateCarAvailableFromComboBox();
        populateCarAvailableUntilComboBox();
        populateAllFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        carOwnerNameTextField = new javax.swing.JTextField();
        carLicenseNumberTextField = new javax.swing.JTextField();
        submitCarBTN = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        modelNameTextField = new javax.swing.JTextField();
        brandNameTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        capacityTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();
        carOwnerLocationTXTField = new javax.swing.JTextField();
        carLocationTXTField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        carAvailableFromComboBox = new javax.swing.JComboBox();
        carAvailableUntilComboBox = new javax.swing.JComboBox();

        jLabel1.setText("Name : ");

        jLabel2.setText("Car License Number : ");

        jLabel3.setText("Car Owner Location : ");

        jLabel4.setText("Car Available From : ");

        jLabel5.setText("Car Available Until : ");

        carOwnerNameTextField.setEnabled(false);

        submitCarBTN.setText("Submit");
        submitCarBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitCarBTNActionPerformed(evt);
            }
        });

        jLabel6.setText("Car Brand Name : ");

        jLabel7.setText("Car Model Name : ");

        jLabel8.setText("Car Capacity : ");

        jLabel9.setText("Car Location : ");

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel10.setText("(Enter 7 characers license number of your car)");

        jLabel11.setText("(Enter starting time of your office hours)");

        jLabel12.setText("(Enter ending time of your office hours)");

        jLabel13.setText("(Enter passanger capacity of your car including the driver)");

        carAvailableFromComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        carAvailableFromComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carAvailableFromComboBoxActionPerformed(evt);
            }
        });

        carAvailableUntilComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        carAvailableUntilComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carAvailableUntilComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backJButton)
                        .addGap(101, 101, 101)
                        .addComponent(submitCarBTN))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(modelNameTextField)
                            .addComponent(carOwnerNameTextField)
                            .addComponent(carLicenseNumberTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(brandNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(capacityTextField)
                            .addComponent(carOwnerLocationTXTField, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(carLocationTXTField, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(carAvailableFromComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(carAvailableUntilComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(68, 68, 68)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(carOwnerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(carLicenseNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(carOwnerLocationTXTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel11)
                    .addComponent(carAvailableFromComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel5)
                        .addComponent(jLabel12))
                    .addComponent(carAvailableUntilComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(brandNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(modelNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(capacityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(carLocationTXTField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(backJButton)
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(submitCarBTN)
                        .addGap(20, 20, 20))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitCarBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitCarBTNActionPerformed
        
        boolean licensePlateNumberUnique = true;
        try{
        for(Traveller traveller : organization.getTravellerDirectory().getTravellerList()){
            if(traveller instanceof CarOwner){
                CarOwner co = (CarOwner)traveller;
            if(co.getCar().getLicensePlateNumber().equals(carLicenseNumberTextField.getText()) && traveller!=this.userAccount.getTraveller()){
                licensePlateNumberUnique = false;
                break;
            }
        }
        }
        }
        catch(Exception e){
            
        }
        
        FieldLevelValidation flv = new FieldLevelValidation();
        
        String availableFromString = (String)carAvailableFromComboBox.getSelectedItem();
        int indexOfColonInFrom = availableFromString.indexOf(":");
        int availableFrom = Integer.parseInt(availableFromString.substring(0,indexOfColonInFrom).trim());
        
        String availableUntilString = (String)carAvailableUntilComboBox.getSelectedItem();
        int indexOfColonInUntil = availableUntilString.indexOf(":");
        int availableUntil = Integer.parseInt(availableUntilString.substring(0,indexOfColonInUntil).trim());
        
        if(carLicenseNumberTextField.getText().equals("") || carOwnerLocationTXTField.getText().equals("") 
                || brandNameTextField.getText().equals("") || modelNameTextField.getText().equals("")
                || capacityTextField.getText().equals("") || carLocationTXTField.getText().equals("")){
            JOptionPane.showMessageDialog(null, "One or more fields are blank");
        }
               
        else if(!flv.validateIntegerField(capacityTextField.getText(), 2)){
            JOptionPane.showMessageDialog(null, "Enter a valid Capacity value.");
        }
        else if(availableFromString.equals(availableUntilString)){
            JOptionPane.showMessageDialog(null, "Car available from and until are same. Cannot Save.");
        }
        else if(availableFrom>availableUntil){
            JOptionPane.showMessageDialog(null, "The until date is greater than the from date. Cannot save.");
        }
        else if((availableUntil - availableFrom) > 8){
            JOptionPane.showMessageDialog(null, "You cannot leave your car for car pool beyond 8 hours.");
        }
        else if(!flv.validateLicenseField(carLicenseNumberTextField.getText())){
            JOptionPane.showMessageDialog(null, "Invalid License Plate Number.");
        }
        else if(licensePlateNumberUnique==false){
            JOptionPane.showMessageDialog(null, "License Plate Number is not Unique.");
        }
        else if(!flv.validateLocationField(carOwnerLocationTXTField.getText())){
            JOptionPane.showMessageDialog(null, "Invalid Car Owner Location. Please Enter The Complete Address.");
        }  
        else if(!flv.validateLocationField(carLocationTXTField.getText())){
            JOptionPane.showMessageDialog(null, "Invalid Car Location. Please Enter The Complete Address.");
        }
        else{
        
        CarOwner co = (CarOwner)userAccount.getTraveller();
        
        co.setFromTime(availableFrom);
        co.setToTime(availableUntil);
        co.setLocation(carOwnerLocationTXTField.getText());
        
        if(co.getCar()==null){
        Car car = new Car();
        car.setBrand(String.valueOf(brandNameTextField.getText()));
        car.setLicensePlateNumber(carLicenseNumberTextField.getText());
        car.setModel(String.valueOf(modelNameTextField.getText()));
        car.setCapacity(Integer.parseInt(capacityTextField.getText()));
        car.setLoction(carLocationTXTField.getText());
        co.setCar(car);
        }
        else{
        Car car = co.getCar();
        car.setBrand(String.valueOf(brandNameTextField.getText()));
        car.setLicensePlateNumber(carLicenseNumberTextField.getText());
        car.setModel(String.valueOf(modelNameTextField.getText()));
        car.setCapacity(Integer.parseInt(capacityTextField.getText()));
        car.setLoction(carLocationTXTField.getText());
        co.setCar(car);
        }
        
        JOptionPane.showMessageDialog(null, "Successfully Saved!");
        }
        
    
        
    }//GEN-LAST:event_submitCarBTNActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CarOwnerWorkAreaJPanel cowajp = (CarOwnerWorkAreaJPanel) component;
        cowajp.disableButtonLogic();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void carAvailableFromComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carAvailableFromComboBoxActionPerformed
        
    }//GEN-LAST:event_carAvailableFromComboBoxActionPerformed

    private void carAvailableUntilComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carAvailableUntilComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_carAvailableUntilComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTextField brandNameTextField;
    private javax.swing.JTextField capacityTextField;
    private javax.swing.JComboBox carAvailableFromComboBox;
    private javax.swing.JComboBox carAvailableUntilComboBox;
    private javax.swing.JTextField carLicenseNumberTextField;
    private javax.swing.JTextField carLocationTXTField;
    private javax.swing.JTextField carOwnerLocationTXTField;
    private javax.swing.JTextField carOwnerNameTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField modelNameTextField;
    private javax.swing.JButton submitCarBTN;
    // End of variables declaration//GEN-END:variables

    
    public void populateAllFields() {
        CarOwner co = (CarOwner)userAccount.getTraveller();
        if(co.getLocation()!=null){
        
        carLicenseNumberTextField.setText(String.valueOf(co.getCar().getLicensePlateNumber()));
        carAvailableFromComboBox.removeAllItems();
        carAvailableUntilComboBox.removeAllItems();
        carAvailableFromComboBox.addItem(String.valueOf(co.getFromTime()) + ":00");
        carOwnerLocationTXTField.setText(co.getLocation());
        carAvailableUntilComboBox.addItem(String.valueOf(co.getToTime()) + ":00");
        brandNameTextField.setText(String.valueOf(co.getCar().getBrand()));
        modelNameTextField.setText(String.valueOf(co.getCar().getModel()));
        capacityTextField.setText(String.valueOf(co.getCar().getCapacity()));
        carLocationTXTField.setText(co.getCar().getLoction());
        }
    }

    private void populateCarAvailableFromComboBox() {
        carAvailableFromComboBox.removeAllItems();
        String[] availableFrom = {"1:00","2:00","3:00","4:00","5:00","6:00","7:00","8:00","9:00","10:00",
                                    "11:00","12:00","13:00","14:00","15:00","16:00","17:00","18:00","19:00","20:00",
                                    "21:00","22:00","23:00","24:00"};
        for(String timeValue : availableFrom){
        carAvailableFromComboBox.addItem(timeValue);
    }
    }
    
    private void populateCarAvailableUntilComboBox() {
        carAvailableUntilComboBox.removeAllItems();
        String[] availableUntil = {"1:00","2:00","3:00","4:00","5:00","6:00","7:00","8:00","9:00","10:00",
                                    "11:00","12:00","13:00","14:00","15:00","16:00","17:00","18:00","19:00","20:00",
                                    "21:00","22:00","23:00","24:00"};
        for(String timeValue : availableUntil){
        carAvailableUntilComboBox.addItem(timeValue);
        }
    }
    
}
