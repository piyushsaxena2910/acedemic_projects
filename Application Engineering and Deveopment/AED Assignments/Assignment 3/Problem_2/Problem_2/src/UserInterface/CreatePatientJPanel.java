/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface;

import BusinessLogic.FieldLevelValidation;
import BusinessLogic.Patient;
import BusinessLogic.Person;
import BusinessLogic.PersonDirectory;
import BusinessLogic.VitalSign;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Piyush
 */
public class CreatePatientJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    //private PersonDirectory personDirectory;
    private Patient patient;
    public CreatePatientJPanel(Patient patient, PersonDirectory personDirectory,JPanel userProcessContainer) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.patient = patient;
        personListComboBox.removeAllItems();
        for(Person person : personDirectory.getPersonList()){
        personListComboBox.addItem(person);
        SimpleDateFormat localDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        timestampTxtField.setText(localDateFormat.format( new Date()));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        createPatientBTN = new javax.swing.JButton();
        backBTN = new javax.swing.JButton();
        respiratoryRateTxtField = new javax.swing.JTextField();
        heartRateTxtField = new javax.swing.JTextField();
        bloodPressureTxtFiled = new javax.swing.JTextField();
        weightTxtField = new javax.swing.JTextField();
        timestampTxtField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        patientIDTxtField = new javax.swing.JTextField();
        personListComboBox = new javax.swing.JComboBox();

        jLabel1.setText("Respiratory Rate");

        jLabel2.setText("Heart Rate");

        jLabel3.setText("Symbollic Blood  Pressure");

        jLabel4.setText("Weight in Pounds");

        createPatientBTN.setText("Create");
        createPatientBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPatientBTNActionPerformed(evt);
            }
        });

        backBTN.setText("<< Back");
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });

        timestampTxtField.setEditable(false);

        jLabel5.setText("Timestamp");

        jLabel6.setText("Person ID");

        jLabel7.setText("Patient ID");

        patientIDTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientIDTxtFieldActionPerformed(evt);
            }
        });

        personListComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(backBTN)
                .addGap(103, 103, 103)
                .addComponent(createPatientBTN)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(214, 214, 214)
                        .addComponent(patientIDTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(timestampTxtField)
                                    .addComponent(respiratoryRateTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                    .addComponent(heartRateTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bloodPressureTxtFiled, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(weightTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(142, 142, 142)
                                .addComponent(personListComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(personListComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(patientIDTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(respiratoryRateTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(heartRateTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(bloodPressureTxtFiled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(weightTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(timestampTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(backBTN)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(createPatientBTN)
                        .addGap(28, 28, 28))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void patientIDTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientIDTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientIDTxtFieldActionPerformed

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
    userProcessContainer.remove(this);
    CardLayout layout = (CardLayout)userProcessContainer.getLayout();
    layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBTNActionPerformed

    private void createPatientBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPatientBTNActionPerformed
    FieldLevelValidation fieldLevelValidation = new FieldLevelValidation();
    
    int counter = 0;
    if(patientIDTxtField.getText().trim().isEmpty()||
            respiratoryRateTxtField.getText().trim().isEmpty()||
                heartRateTxtField.getText().trim().isEmpty()||
                    bloodPressureTxtFiled.getText().trim().isEmpty()||
                        weightTxtField.getText().trim().isEmpty())
    {
        JOptionPane.showMessageDialog(null, "One or More Fields are Blank!");
    }
    else{
       
    String patientID = patientIDTxtField.getText().trim();
    boolean isPatientIDValid = fieldLevelValidation.checkPatientIDField(patientID);
    if(isPatientIDValid==true)
    {
        counter++;
    }
    else
        JOptionPane.showMessageDialog(null, "Patient ID Invalid");
    
    String respiratoryRate = respiratoryRateTxtField.getText().trim();
    boolean isRespiratoryRateValid = fieldLevelValidation.checkPatientIDField(respiratoryRate);
    if(isRespiratoryRateValid==true)
    {
        counter++;
    }
    else
        JOptionPane.showMessageDialog(null, "Patient Respiratory Rate Invalid");
    
    String heartRate = heartRateTxtField.getText().trim();
    boolean isHeartRateValid = fieldLevelValidation.checkPatientIDField(heartRate);
    if(isHeartRateValid==true)
    {
        counter++;
    }
    else
        JOptionPane.showMessageDialog(null, "Patient Heart Rate Invalid");
    
    String bloodPressure = bloodPressureTxtFiled.getText().trim();
    boolean isBloodPressureValid = fieldLevelValidation.checkPatientIDField(bloodPressure);
    if(isBloodPressureValid==true)
    {
        counter++;
    }
    else
        JOptionPane.showMessageDialog(null, "Patient Blood Pressure Invalid");
    
    String weightInPounds = weightTxtField.getText().trim();
    boolean isWeightInPoundsValid = fieldLevelValidation.checkPatientIDField(weightInPounds);
    if(isWeightInPoundsValid==true)
    {
        counter++;
    }
    else
        JOptionPane.showMessageDialog(null, "Patient Weight In Pounds Invalid");
    }
    
    if(counter == 5){
    
    Person p = (Person) personListComboBox.getSelectedItem();
    VitalSign vitalSign = p.getPatient().addVitalSign();
    
    String dateTimeStamp = timestampTxtField.getText().trim();
    
    vitalSign.setPatientID(Integer.parseInt(patientIDTxtField.getText()));
    vitalSign.setHeartRate(Integer.parseInt(heartRateTxtField.getText()));
    vitalSign.setRespiratoryRate(Integer.parseInt(respiratoryRateTxtField.getText()));
    vitalSign.setSymbolicBloodPressure(Integer.parseInt(bloodPressureTxtFiled.getText()));
    vitalSign.setWeightInpounds(Float.parseFloat(weightTxtField.getText()));  
    vitalSign.setDateTimeStamp(dateTimeStamp);
    JOptionPane.showMessageDialog(null, "Patient Profile Created Successfully");
    resetField();
    }
    }//GEN-LAST:event_createPatientBTNActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBTN;
    private javax.swing.JTextField bloodPressureTxtFiled;
    private javax.swing.JButton createPatientBTN;
    private javax.swing.JTextField heartRateTxtField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField patientIDTxtField;
    private javax.swing.JComboBox personListComboBox;
    private javax.swing.JTextField respiratoryRateTxtField;
    private javax.swing.JTextField timestampTxtField;
    private javax.swing.JTextField weightTxtField;
    // End of variables declaration//GEN-END:variables

    private void resetField() {
    patientIDTxtField.setEditable(false);
    respiratoryRateTxtField.setText("");
    heartRateTxtField.setText("");
    bloodPressureTxtFiled.setText("");
    weightTxtField.setText("");
    SimpleDateFormat localDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    timestampTxtField.setText(localDateFormat.format( new Date()));
    }
}
